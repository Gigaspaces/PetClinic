<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-sla="http://www.openspaces.org/schema/sla"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/remoting/openspaces-remoting.xsd
       http://www.openspaces.org/schema/sla http://www.openspaces.org/schema/sla/openspaces-sla.xsd">

    <os-sla:sla cluster-schema="partitioned-sync2backup" number-of-instances="2" number-of-backups="1"
                max-instances-per-vm="1"/>


    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <context:annotation-config/>

    <context:component-scan base-package="com.gigaspaces.dae.petclinic.processor"/>

    <!--<os-remoting:annotation-support />-->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${data-source-driver}"/>
        <property name="url" value="${data-source-url}"/>
        <property name="username" value="${data-source-username}"/>
        <property name="password" value="${data-source-password}"/>
        <property name="maxActive" value="100"/>
        <property name="initialSize" value="10"/>
    </bean>


    <!--
        Hibernate SessionFactory bean. Uses the pooled data source to connect to the database.
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>org.springframework.samples.petclinic.Vet</value>
                <value>org.springframework.samples.petclinic.Visit</value>
                <value>org.springframework.samples.petclinic.Pet</value>
                <value>org.springframework.samples.petclinic.Owner</value>
                <value>org.springframework.samples.petclinic.PetType</value>
                <value>org.springframework.samples.petclinic.Specialty</value>
                <value>com.gigaspaces.dae.domain.id.IdCounterEntry</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!--
        An external data source that will be responsible for persisting changes done on the cluster that
        connects to this mirror using Hibernate.
    -->
    <bean id="hibernateDataSource" class="org.openspaces.persistency.hibernate.StatelessHibernateExternalDataSource">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="initialLoadEntries">
            <list>
                <value>org.springframework.samples.petclinic.Vet</value>
                <value>org.springframework.samples.petclinic.Visit</value>
                <value>org.springframework.samples.petclinic.Pet</value>
                <value>org.springframework.samples.petclinic.Owner</value>
                <value>com.gigaspaces.examples.utils.IdCounterEntry</value>
            </list>
        </property>
    </bean>

    <os-core:space id="space" url="/./petclinic" mirror="true"
                   schema="persistent" external-data-source="hibernateDataSource">
        <os-core:properties>
            <props>
                <!-- Use ALL IN CACHE -->
                <prop key="space-config.engine.cache_policy">1</prop>
                <prop key="space-config.external-data-source.usage">read-only</prop>
                <prop key="cluster-config.cache-loader.central-data-source">true</prop>
                <prop key="cluster-config.mirror-service.bulk-size">1000</prop>
                <prop key="cluster-config.mirror-service.interval-millis">3000</prop>
                <prop key="cluster-config.mirror-service.interval-opers">1000</prop>
            </props>
        </os-core:properties>
    </os-core:space>

    <os-core:annotation-support />

    <bean id="idObjectInitializer" class="com.gigaspaces.dae.petclinic.processor.util.IdObjectInitializer"/>
    <bean id="dataInitializer" class="com.gigaspaces.dae.petclinic.processor.init.DataInitializer" />

    <os-core:local-tx-manager id="transactionManager" space="space"/>

    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>

    <os-remoting:service-exporter id="remotingServiceExporter"/>

</beans>